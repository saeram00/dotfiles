# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Start antigen
if [[ -h "${XDG_CONFIG_HOME:-${HOME:-~}/.config}/antigen/antigen.zsh" ]]; then
  source "${XDG_CONFIG_HOME:-${HOME:-~}/.config}/antigen/antigen.zsh"
else
  if [[ -r /usr/share/zsh/share/antigen.zsh ]]; then
    # antigen.zsh is not linked. Setting up a symlink.
    ln -s /usr/share/zsh/share/antigen.zsh "${XDG_CONFIG_HOME:-${HOME:-~}/.config}/antigen/antigen.zsh"
  else
    echo 'antigen is not installed on this system.'
  fi
fi

# Use oh-my-zsh libraries
antigen use oh-my-zsh

# Antigen Bundles
antigen bundle "zsh-users/zsh-syntax-highlighting"
antigen bundle "zsh-users/zsh-completions"
antigen bundle "zsh-users/zsh-autosuggestions"

# Antigen Theme
antigen theme "romkatv/powerlevel10k"

# Apply plugins
antigen apply
# End of antigen setup

# Lines configured by zsh-newuser-install
setopt extendedglob notify
unsetopt autocd beep nomatch
bindkey -v
# End of lines configured by zsh-newuser-install

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f "${HOME}/.p10k.zsh" ]] || source "${HOME}/.p10k.zsh"

# Source profile
[[ -r "${HOME}/.profile" ]] && source "${HOME}/.profile"

# Add user bin folders to PATH
[[ -d "${HOME}/bin" ]] && PATH="${HOME}/bin:${PATH}"
[[ -d "${HOME}/.local/bin" ]] && PATH="${HOME}/.local/bin:${PATH}"

# Source aliases file
[[ -f "${HOME}/.aliases" ]] && source "${HOME}/.aliases"

# History options
export HISTSIZE=1000
export SAVEHIST=1000
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE

# Completions settings
autoload -Uz bashcompinit && bashcompinit
autoload -Uz compinit && compinit

# pip completion
# eval "$(pip completion --zsh)"
# compctl -K _pip_completion pip

# pipx completion
# eval "$(register-python-argcomplete pipx)"
